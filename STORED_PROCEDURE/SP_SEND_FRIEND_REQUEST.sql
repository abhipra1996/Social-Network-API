DELIMITER $$
CREATE PROCEDURE SP_SEND_FRIEND_REQUEST(
IN from_user_id INT,
IN to_user_id INT
)
BEGIN 

   SET @FROM_USER_ID = (SELECT USR.USER_ID FROM USERS AS USR WHERE USR.USER_ID=from_user_id);
   SET @TO_USER_ID = (SELECT U.USER_ID FROM USERS AS U WHERE U.USER_ID=to_user_id);
   
   SET @REQUEST_ALREADY_SENT = (SELECT FM.REQUEST_ID FROM FRIENDSHIP_MAPPING AS FM WHERE FM.FRIEND_ID_FROM=to_user_id AND FM.FRIEND_ID_TO=from_user_id );
   
   SET @SAME_FRIEND_REQUEST = (SELECT FM.REQUEST_ID FROM FRIENDSHIP_MAPPING AS FM WHERE FM.FRIEND_ID_FROM=from_user_id AND FM.FRIEND_ID_TO=to_user_id );
   
	IF(@FROM_USER_ID <> 0 AND @TO_USER_ID <> 0 AND @REQUEST_ALREADY_SENT IS NULL AND @SAME_FRIEND_REQUEST IS NULL AND from_user_id <> to_user_id) THEN
       
             INSERT INTO FRIENDSHIP_MAPPING (FRIEND_ID_FROM,FRIEND_ID_TO,SENT_FLAG,SENT_DATE,ACTIVE_FLAG) VALUES (from_user_id,to_user_id,1,NOW(),0);
             SET @FRIEND_REQUEST_ID:=LAST_INSERT_ID();
             SELECT 'true' AS SUCCESS,@FRIEND_REQUEST_ID AS FRIEND_REQUEST_ID,'Sucessfully Sent Request' AS ERROR_DESC;
	ELSE 
             IF(@FROM_USER_ID IS NULL || @FROM_USER_ID = 0) THEN
                SELECT 'false' AS SUCCESS,0 AS REQUEST_ID,'Invalid from User Id' AS ERROR_DESC;
             ELSEIF(@TO_USER_ID IS NULL || @TO_USER_ID = 0) THEN
                SELECT 'false' AS SUCCESS,0 AS REQUEST_ID,'Invalid to User Id' AS ERROR_DESC;
             ELSEIF(@REQUEST_ALREADY_SENT IS NOT NULL) THEN
                SELECT 'false' AS SUCCESS,@REQUEST_ALREADY_SENT AS REQUEST_ID,'Friend Request already sent' AS ERROR_DESC;
             ELSEIF(@SAME_FRIEND_REQUEST IS NOT NULL) THEN
                SELECT 'false' AS SUCCESS,@SAME_FRIEND_REQUEST AS REQUEST_ID,'Friend Request already sent' AS ERROR_DESC;
             ELSE
				SELECT 'false' AS SUCCESS,0 AS REQUEST_ID,'Invalid Friend Request' AS ERROR_DESC;
             END IF;
	END IF;
END$$
DELIMITER ;
